import {SapphireFieldType} from '../../fields-typing';
import {DocumentReference, IValidator, refValidator, ValidationResult} from '../../../../common';

@SapphireFieldType({
  name: 'group',
  castTo: 'string',
  paramDefs: [
    {
      name: 'hidden-collection',
      description: 'Generated by the management layer. Do not fill',
      type: 'string',
      required: false,
    }
  ] as const,
})
export class Group implements IValidator<string> {
  constructor(private readonly params: { 'hidden-collection': string; }) {
  }

  public validate(value: string): ValidationResult {
    const validationRes = refValidator(value);
    if (!validationRes.isValid) {
      return validationRes;
    }

    const ref = DocumentReference.parse(value);

    const err: string[] = [];

    if (ref.store != this.params['hidden-collection']) {
      err.push(
          `Group reference doesn't point on hidden collection ${this.params['hidden-collection']} created for this field.`
      );
    }

    if (!ref.docId) {
      err.push(`Group reference should point to the document inside a collection.`);
    } else if (ref.path.length) {
      err.push(`Deep path ${ ref.path.join('/') } is not authorized in group reference.`);
    }

    return err.length
        ? ValidationResult.invalid(...err)
        : ValidationResult.valid();
  }
}
